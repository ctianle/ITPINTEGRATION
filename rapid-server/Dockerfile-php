FROM php:8.0-apache

# Set user 'www-data' UID and GID to match the host system or a standard ID, such as 1000, if suitable
ARG WWW_DATA_UID=1000
ARG WWW_DATA_GID=1000

# Update 'www-data' UID and GID to match the provided arguments
RUN usermod -u $WWW_DATA_UID www-data && groupmod -g $WWW_DATA_GID www-data

# Install necessary extensions and tools
RUN apt-get update && apt-get install -y \
    libonig-dev \
    libssl-dev \
    libgmp-dev \
    git \
    zip \
    unzip \
    curl \
    python3 \
    python3-pip \
    && docker-php-ext-install \
    mbstring \
    && docker-php-ext-enable \
    mbstring \ 
    && pecl install mongodb \
    && docker-php-ext-enable mongodb


# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy custom Apache configuration
COPY apache-php/config.conf /etc/apache2/conf-available/custom-config.conf

# Enable the new configuration
RUN a2enconf custom-config

# Copy custom php.ini file
COPY apache-php/php.ini /usr/local/etc/php/php.ini

# Set working directory
WORKDIR /var/www/html

# Copy the app directory to the container
COPY ./html /var/www/html
COPY ./logs /var/logs/myapp
# Install Composer dependencies
RUN composer install --no-interaction --prefer-dist --optimize-autoloader

# Ensure the web server user can write to the web directory
RUN chown -R www-data:www-data /var/www/html
RUN chown -R www-data:www-data /var/logs/myapp

# Create a directory for storing keys and set permissions
RUN mkdir -p /var/www/keys \
    && chown -R www-data:www-data /var/www/keys \
    && chmod 700 /var/www/keys

# Create and set permissions for log directory
RUN mkdir -p /var/logs/myapp \
    && chown -R www-data:www-data /var/logs/myapp

# Expose port 80
EXPOSE 80

# Switch to the www-data user
USER www-data

# Start Apache in the foreground
CMD ["apache2-foreground"]
